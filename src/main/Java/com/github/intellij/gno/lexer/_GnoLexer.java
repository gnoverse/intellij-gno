package com.github.intellij.gno.lexer;

import com.github.intellij.gno.psi.GnoTokenSets;
import com.github.intellij.gno.psi.GnoTypes;
import com.intellij.lexer.FlexLexer;
import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
import java.io.IOException;
import java.io.Reader;

public class _GnoLexer implements FlexLexer {
    public static final int YYEOF = -1;
    private static final int ZZ_BUFFERSIZE = 16384;
    public static final int YYINITIAL = 0;
    public static final int TEMPLATE_STATE = 2;
    private static final int[] ZZ_LEXSTATE = new int[]{0, 0, 1, 1};
    static final char[] ZZ_CMAP_Z = zzUnpackCMap("\u0001\u0000\u0001\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0001\u0007\u0001\b\u0002\t\u0001\n\u0001\u000b\u0006\f\u0001\r\u0013\f\u0001\u000e\u0001\f\u0001\u000f\u0001\u0010\n\f\u0001\u0011\b\t\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0017\u0001\u0018\u0001\u0019\u0001\u001a\u0001\u001b\u0001\u001c\u0001\u001d\u0002\t\u0001\f\u0001\u001e\u0003\t\u0001\u001f\b\t\u0001 \u0001!\u0005\f\u0001\"\u0001#\t\t\u0001$\u0002\t\u0001%\u0005\t\u0001&\u0004\t\u0001'\u0001(\u0004\t)\f\u0001)\u0003\f\u0001*\u0001+\u0004\f\u0001,\n\t\u0001-\u0381\t");
    static final char[] ZZ_CMAP_Y = zzUnpackCMap("\u0001\u0000\u0001\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0001\u0007\u0001\b\u0001\u0001\u0001\t\u0001\n\u0001\u000b\u0001\f\u0001\u000b\u0001\f\u001c\u000b\u0001\r\u0001\u000e\u0001\u000f\b\u0001\u0001\u0010\u0001\u0011\u0001\u000b\u0001\u0012\u0004\u000b\u0001\u0013\b\u000b\u0001\u0014\n\u000b\u0001\u0015\u0001\u000b\u0001\u0016\u0001\u0015\u0001\u000b\u0001\u0017\u0004\u0001\u0001\u000b\u0001\u0018\u0001\u0019\u0002\u0001\u0002\u000b\u0001\u0018\u0001\u0001\u0001\u001a\u0001\u0015\u0005\u000b\u0001\u001b\u0001\u001c\u0001\u001d\u0001\u0001\u0001\u001e\u0001\u000b\u0001\u0001\u0001\u001f\u0005\u000b\u0001 \u0001!\u0001\"\u0001\u000b\u0001\u0018\u0001#\u0001\u000b\u0001$\u0001%\u0001\u0001\u0001\u000b\u0001&\u0004\u0001\u0001\u000b\u0001'\u0004\u0001\u0001(\u0002\u000b\u0001)\u0001\u0001\u0001*\u0001+\u0001\u0015\u0001,\u0001-\u0001.\u0001/\u00010\u00011\u0001+\u0001\u000e\u00012\u0001-\u0001.\u00013\u0001\u0001\u00014\u00015\u00016\u00017\u0001\u0012\u0001.\u00018\u0001\u0001\u00019\u0001+\u0001:\u0001;\u0001-\u0001.\u00018\u0001\u0001\u00011\u0001+\u0001!\u0001<\u0001=\u0001>\u0001?\u0001\u0001\u00019\u00015\u0001\u0001\u0001@\u0001\u001e\u0001.\u0001)\u0001\u0001\u0001A\u0001+\u0001\u0001\u0001B\u0001\u001e\u0001.\u0001C\u0001\u0001\u00010\u0001+\u0001D\u0001@\u0001\u001e\u0001\u000b\u0001E\u00010\u0001F\u0001+\u0001G\u0001H\u0001I\u0001\u000b\u0001J\u0001K\u0001\u0001\u00015\u0001\u0001\u0001\u0015\u0002\u000b\u0001L\u0001K\u0001M\u0002\u0001\u0001N\u0001O\u0001P\u0001Q\u0001R\u0001S\u0002\u0001\u00019\u0001\u0001\u0001M\u0001\u0001\u0001T\u0001\u000b\u0001U\u0001\u0001\u0001V\u0007\u0001\u0002\u000b\u0001\u0018\u0001W\u0001M\u0001X\u0001Y\u0001Z\u0001[\u0001M\u0002\u000b\u0001\\\u0002\u000b\u0001]\u0014\u000b\u0001^\u0001_\u0002\u000b\u0001^\u0002\u000b\u0001`\u0001a\u0001\f\u0003\u000b\u0001a\u0003\u000b\u0001\u0018\u0002\u0001\u0001\u000b\u0001\u0001\u0005\u000b\u0001b\u0001\u0015%\u000b\u0001c\u0001\u000b\u0001\u0015\u0001\u0018\u0004\u000b\u0001\u0018\u0001d\u0001e\u0001\u000e\u0001\u000b\u0001\u000e\u0001\u000b\u0001\u000e\u0001e\u00019\u0003\u000b\u0001f\u0001\u0001\u0001g\u0001M\u0002\u0001\u0001M\u0005\u000b\u0001\u0017\u0001h\u0001\u000b\u0001i\u0004\u000b\u0001 \u0001\u000b\u0001j\u0002\u0001\u00015\u0001\u000b\u0001k\u0001l\u0002\u000b\u0001m\u0001\u000b\u0001?\u0001M\u0002\u0001\u0001\u000b\u0001K\u0003\u000b\u0001l\u0002\u0001\u0002M\u0001n\u0005\u0001\u0001H\u0002\u000b\u0001f\u0001o\u0001M\u0002\u0001\u0001p\u0001\u000b\u0001q\u0001\"\u0002\u000b\u0001 \u0001\u0001\u0002\u000b\u0001f\u0001\u0001\u0001r\u0001\"\u0001\u000b\u0001k\u0001&\u0005\u0001\u0001s\u0001t\f\u000b\u0004\u0001\u0011\u000b\u0001b\u0002\u000b\u0001b\u0001u\u0001\u000b\u0001k\u0003\u000b\u0001v\u0001w\u0001x\u0001U\u0001w\u0002\u0001\u0001y\u0004\u0001\u0001z\u0001\u0001\u0001U\u0006\u0001\u0001{\u0001|\u0001}\u0001~\u0001\u007f\u0003\u0001\u0001\u0080g\u0001\u0002\u000b\u0001j\u0002\u000b\u0001j\b\u000b\u0001\u0081\u0001\u0082\u0002\u000b\u0001\\\u0003\u000b\u0001\u0083\u0001\u0001\u0001\u000b\u0001K\u0004\u0084\u0004\u0001\u0001W\u001d\u0001\u0001\u0085\u0002\u0001\u0001\u0086\u0001\u0015\u0004\u000b\u0001\u0087\u0001\u0015\u0004\u000b\u0001]\u0001H\u0001\u000b\u0001k\u0001\u0015\u0004\u000b\u0001j\u0001\u0001\u0001\u000b\u0001\u0018\u0003\u0001\u0001\u000b \u0001[\u000b\u0001 \u0004\u0001]\u000b\u0001 \u0002\u0001\b\u000b\u0001U\u0004\u0001\u0002\u000b\u0001k\u0010\u000b\u0001U\u0001\u000b\u0001\u0088\u0001\u0001\u0002\u000b\u0001j\u0001W\u0001\u000b\u0001k\u0004\u000b\u0001 \u0002\u0001\u0001\u0089\u0001\u008a\u0005\u000b\u0001\u008b\u0001\u000b\u0001j\u0001\u0017\u0003\u0001\u0001\u0089\u0001\u008c\u0001\u000b\u0001\u0019\u0001\u0001\u0003\u000b\u0001f\u0001\u008a\u0002\u000b\u0001f\u0001\u0001\u0001M\u0001\u0001\u0001\u008d\u0001\"\u0001\u000b\u0001 \u0001\u000b\u0001K\u0001\u0001\u0001\u000b\u0001U\u0001(\u0002\u000b\u0001\u0019\u0001W\u0001M\u0001\u008e\u0001\u008f\u0002\u000b\u0001&\u0001\u0001\u0001\u0090\u0001M\u0001\u000b\u0001\u0091\u0003\u000b\u0001\u0092\u0001\u0093\u0001\u0094\u0001\u0018\u00016\u0001\u0095\u0001\u0096\u0001\u0084\u0002\u000b\u0001]\u0001 \u0007\u000b\u0001\u0019\u0001M:\u000b\u0001f\u0001\u000b\u0001\u0097\u0002\u000b\u0001m\u0010\u0001\u0016\u000b\u0001k\u0006\u000b\u0001?\u0002\u0001\u0001K\u0001\u0098\u0001.\u0001\u0099\u0001\u009a\u0006\u000b\u0001\u000e\u0001\u0001\u0001p\u0015\u000b\u0001k\u0001\u0001\u0004\u000b\u0001\u008a\u0002\u000b\u0001\u0017\u0002\u0001\u0001m\u0007\u0001\u0001\u008e\u0007\u000b\u0001U\u0001\u0001\u0001M\u0001\u0015\u0001\u0018\u0001\u0015\u0001\u0018\u0001\u009b\u0004\u000b\u0001j\u0001\u009c\u0001\u009d\u0002\u0001\u0001\u009e\u0001\u000b\u0001\f\u0001\u009f\u0002k\u0002\u0001\u0007\u000b\u0001\u0018\u0018\u0001\u0001\u000b\u0001U\u0003\u000b\u00019\u0002\u0001\u0002\u000b\u0001\u0001\u0001\u000b\u0001 \u0002\u000b\u0001 \u0001\u000b\u0001k\u0002\u000b\u0001¡\u0003\u0001\t\u000b\u0001k\u0001M\u0002\u000b\u0001¡\u0001\u000b\u0001m\u0002\u000b\u0001\u0017\u0003\u000b\u0001f\t\u0001\u0013\u000b\u0001K\u0001\u000b\u0001 \u0001\u0017\t\u0001\u0001¢\u0002\u000b\u0001£\u0001\u000b\u0001 \u0001\u000b\u0001K\u0001\u000b\u0001j\u0004\u0001\u0001\u000b\u0001¤\u0001\u000b\u0001 \u0001\u000b\u0001?\u0004\u0001\u0003\u000b\u0001¥\u0004\u0001\u00019\u0001¦\u0001\u000b\u0001f\u0002\u0001\u0001\u000b\u0001U\u0001\u000b\u0001U\u0002\u0001\u0001T\u0001\u000b\u0001l\u0001\u0001\u0003\u000b\u0001 \u0001\u000b\u0001 \u0001\u000b\u0001\u0019\u0001\u000b\u0001\u000e\u0006\u0001\u0004\u000b\u0001&\u0003\u0001\u0003\u000b\u0001\u0019\u0003\u000b\u0001\u00190\u0001\u0001p\u0002\u000b\u0001\u0017\u0002\u0001\u00015\u0001\u0001\u0001p\u0002\u000b\u0002\u0001\u0001\u000b\u0001&\u0001M\u0001p\u0001\u000b\u0001K\u00015\u0001\u0001\u0002\u000b\u0001§\u0001p\u0002\u000b\u0001\u0019\u0001¨\u0001©\u0002\u0001\u0001\u000b\u0001\u0012\u0001m\u0005\u0001\u0001ª\u0001«\u0001&\u0002\u000b\u0001j\u0001\u0001\u0001M\u0001;\u0001-\u0001.\u00018\u0001\u0001\u0001¬\u0001\u000e\t\u0001\u0003\u000b\u0001l\u0001\u00ad\u0001M\u0002\u0001\u0003\u000b\u0001\u0001\u0001®\u0001M\n\u0001\u0002\u000b\u0001j\u0002\u0001\u0001¯\u0002\u0001\u0003\u000b\u0001\u0001\u0001°\u0001M\u0002\u0001\u0002\u000b\u0001\u0018\u0001\u0001\u0001M\u0003\u0001\u0001\u000b\u0001?\u0001\u0001\u0001M\u0016\u0001\u0004\u000b\u0001M\u0001W\u001c\u0001\u0003\u000b\u0001&\u0010\u0001\u0001.\u0001\u000b\u0001j\u0001\u0001\u00019\u0001M\u0001\u0001\u0001\u008a\u0001\u000b7\u00019\u000b\u0001?\u000e\u0001\f\u000b\u0001f+\u0001\u0002\u000b\u0001j=\u0001$\u000b\u0001K\u001b\u0001#\u000b\u0001&\u0001\u000b\u0001j\u0001M\u0006\u0001\u0001\u000b\u0001k\u0001\u0001\u0003\u000b\u0001\u0001\u0001f\u0001M\u0001p\u0001±\u0001\u000b7\u0001\u0004\u000b\u0001l\u00019\u0003\u0001\u0001p\u0004\u0001\u00019\u0001\u0001>\u000b\u0001U\u0001\u0001/\u000b\u0001\u0019\u0010\u0001\u0001\u000e?\u0001\u0006\u000b\u0001\u0018\u0001U\u0001&\u0001?6\u0001\u0005\u000b\u0001\u008e\u0003\u000b\u0001e\u0001²\u0001³\u0001´\u0003\u000b\u0001µ\u0001¶\u0001\u000b\u0001·\u0001¸\u0001\u001e\u0014\u000b\u0001¹\u0001\u000b\u0001\u001e\u0001]\u0001\u000b\u0001]\u0001\u000b\u0001\u008e\u0001\u000b\u0001\u008e\u0001j\u0001\u000b\u0001j\u0001\u000b\u0001.\u0001\u000b\u0001.\u0001\u000b\u0001º\u0003»\f\u000b\u0001l\u0003\u0001\u0004\u000b\u0001f\u0001MJ\u0001\u0001´\u0001\u000b\u0001¼\u0001½\u0001¾\u0001¿\u0001À\u0001Á\u0001Â\u0001m\u0001Ã\u0001m\u0014\u0001-\u000b\u0001K\u0002\u0001C\u000b\u0001l\r\u000b\u0001kh\u000b\u0001\u000e\u0015\u0001!\u000b\u0001k\u001e\u0001");
    static final char[] ZZ_CMAP_A = zzUnpackCMap("\t\u0000\u0001\u0002\u0001\u0001\u00018\u0001\u0002\u0001\u0001\u0012\u0000\u0001\u0002\u0001\u0000\u0001\u000e\u0001$\u00017\u0001#\u0001\u0000\u0001\u0014\u0001\u001c\u0001\u001d\u0001\u0017\u0001\f\u0001!\u0001\u0019\u0001\r\u0001\u0016\u0001\b\u0007\u0007\u0001\u0013\u0001\u0006\u0001 \u0002\u0000\u0001\u001e\u0002\u0000\u0001\"\u0004\u0005\u0001\u000b\u0001\u0005\u000e\u0003\u0001\u0012\u0002\u0003\u0001\n\u0002\u0003\u0001\u0000\u0001\u0011\u0002\u0000\u0001\u0003\u0001\u001a\u0001\u0010\u0001,\u0001.\u0001)\u0001'\u0001&\u00014\u00016\u0001%\u0001\u0003\u0001/\u0001*\u00011\u0001(\u0001-\u00012\u0001\u0003\u00013\u0001+\u00010\u0001\u0015\u0001\u000f\u00015\u0001\t\u0002\u0003\u0001\u0018\u0001\u001f\u0001\u001b\u0007\u0000\u00018\u0014\u0000\u0001\u0003\n\u0000\u0001\u0003\u0004\u0000\u0001\u0003\u0005\u0000\u0017\u0003\u0001\u0000\n\u0003\u0004\u0000\f\u0003\u000e\u0000\u0005\u0003\u0007\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0005\u0003\u0001\u0000\u0002\u0003\u0002\u0000\u0004\u0003\u0001\u0000\u0001\u0003\u0006\u0000\u0001\u0003\u0001\u0000\u0003\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0013\u0003\u0001\u0000\u000b\u0003\b\u0000\u0006\u0003\u0001\u0000\u0016\u0003\u0002\u0000\u0001\u0003\u0006\u0000\b\u0003\b\u0000\u000b\u0003\u0005\u0000\u0003\u0003\r\u0000\n\u0004\u0004\u0000\u0006\u0003\u0001\u0000\u0001\u0003\u000f\u0000\u0002\u0003\u0007\u0000\u0002\u0003\n\u0004\u0003\u0003\u0002\u0000\u0002\u0003\u0001\u0000\u000e\u0003\r\u0000\t\u0003\u000b\u0000\u0001\u0003\u000e\u0000\n\u0004\u0006\u0003\u0004\u0000\u0002\u0003\u0004\u0000\u0001\u0003\u0005\u0000\u0006\u0003\u0004\u0000\u0001\u0003\t\u0000\u0001\u0003\u0003\u0000\u0001\u0003\u0007\u0000\t\u0003\u0007\u0000\u0005\u0003\u0001\u0000\b\u0003\u0006\u0000\u0016\u0003\u0003\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0007\u0000\n\u0003\u0004\u0000\n\u0004\u0001\u0003\u0004\u0000\b\u0003\u0002\u0000\u0002\u0003\u0002\u0000\u0016\u0003\u0001\u0000\u0007\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0004\u0003\u0003\u0000\u0001\u0003\u0010\u0000\u0001\u0003\r\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0005\u0000\u0006\u0003\u0004\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u000f\u0000\u0004\u0003\u0001\u0000\u0001\u0003\u0007\u0000\n\u0004\u0002\u0000\u0003\u0003\u0010\u0000\t\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0005\u0003\u0003\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0018\u0000\u0001\u0003\u000b\u0000\b\u0003\u0002\u0000\u0001\u0003\u0003\u0000\u0001\u0003\u0001\u0000\u0006\u0003\u0003\u0000\u0003\u0003\u0001\u0000\u0004\u0003\u0003\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0002\u0003\u0003\u0000\u0002\u0003\u0003\u0000\u0003\u0003\u0003\u0000\f\u0003\u000b\u0000\b\u0003\u0001\u0000\u0002\u0003\b\u0000\u0003\u0003\u0005\u0000\u0001\u0003\u0004\u0000\b\u0003\u0001\u0000\u0006\u0003\u0001\u0000\u0005\u0003\u0003\u0000\u0001\u0003\u0003\u0000\u0002\u0003\r\u0000\u000b\u0003\u0002\u0000\u0001\u0003\u0006\u0000\u0003\u0003\b\u0000\u0001\u0003\n\u0000\u0006\u0003\u0005\u0000\u0012\u0003\u0003\u0000\b\u0003\u0001\u0000\t\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0007\u0003\t\u0000\u0001\u0003\u0001\u0000\u0002\u0003\f\u0000\n\u0004\u0007\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0006\u0000\u0004\u0003\u0001\u0000\u0007\u0003\u0001\u0000\u0003\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0002\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0002\u0003\t\u0000\u0001\u0003\u0002\u0000\u0005\u0003\u0001\u0000\u0001\u0003\t\u0000\n\u0004\u0002\u0000\f\u0003\u0001\u0000\u0014\u0003\u000b\u0000\u0005\u0003\u0012\u0000\u0007\u0003\u0004\u0000\u0004\u0003\u0003\u0000\u0001\u0003\u0003\u0000\u0002\u0003\u0007\u0000\u0003\u0003\u0004\u0000\r\u0003\f\u0000\u0001\u0003\u0001\u0000\u0006\u0003\u0001\u0000\u0001\u0003\u0005\u0000\u0001\u0003\u0002\u0000\u000b\u0003\u0001\u0000\r\u0003\u0001\u0000\u0004\u0003\u0002\u0000\u0007\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0002\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0002\u0000\u0007\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0002\u0000\u000e\u0003\u0002\u0000\u0006\u0003\u0002\u0000\r\u0003\u0002\u0000\u0001\u0003\u0001\u0000\b\u0003\u0007\u0000\r\u0003\u0001\u0000\u0006\u0003\u0013\u0000\u0001\u0003\u0004\u0000\u0001\u0003\u0003\u0000\u0005\u0003\u0002\u0000\u0012\u0003\u0001\u0000\u0001\u0003\u0005\u0000\u000f\u0003\u0001\u0000\u000e\u0003\u0002\u0000\u0005\u0003\u000b\u0000\f\u0003\u000b\u0000\u0001\u0003\r\u0000\u0007\u0003\u0007\u0000\u000e\u0003\r\u0000\u0002\u0003\n\u0004\u0003\u0000\u0003\u0003\t\u0000\u0004\u0003\u0001\u0000\u0004\u0003\u0003\u0000\u0002\u0003\t\u0000\b\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0006\u0003\u0001\u0000\u0007\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0003\u0003\u0001\u0000\u0007\u0003\u0003\u0000\u0004\u0003\u0002\u0000\u0006\u0003\f\u0000\u00028\u0007\u0000\u0001\u0003\r\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0004\u0000\u0001\u0003\u0002\u0000\n\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0005\u0003\u0006\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u000b\u0003\u0002\u0000\u0004\u0003\u0005\u0000\u0005\u0003\u0004\u0000\u0001\u0003\u0004\u0000\u0002\u0003\u000b\u0000\u0005\u0003\u0006\u0000\u0004\u0003\u0003\u0000\u0002\u0003\f\u0000\b\u0003\u0007\u0000\b\u0003\u0001\u0000\u0007\u0003\u0006\u0000\u0002\u0003\n\u0000\u0005\u0003\u0005\u0000\u0002\u0003\u0003\u0000\u0007\u0003\u0006\u0000\u0003\u0003\n\u0004\u0002\u0003\u000b\u0000\t\u0003\u0002\u0000\u0017\u0003\u0002\u0000\u0007\u0003\u0001\u0000\u0003\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0004\u0003\u0002\u0000\u0006\u0003\u0003\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0005\u0003\u0001\u0000\n\u0003\n\u0004\u0005\u0003\u0001\u0000\u0003\u0003\u0001\u0000\b\u0003\u0004\u0000\u0007\u0003\u0003\u0000\u0001\u0003\u0003\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0002\u0003\u0002\u0000\u0005\u0003\u0002\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0018\u0000\u0003\u0003\u0003\u0000\u0006\u0003\u0002\u0000\u0006\u0003\u0002\u0000\u0006\u0003\t\u0000\u0007\u0003\u0004\u0000\u0005\u0003\u0003\u0000\u0005\u0003\u0005\u0000\u0001\u0003\u0001\u0000\b\u0003\u0001\u0000\u0005\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u0001\u0000\n\u0003\u0006\u0000\n\u0003\u0002\u0000\u0006\u0003\u0002\u0000\u0006\u0003\u0002\u0000\u0006\u0003\u0002\u0000\u0003\u0003\u0003\u0000\f\u0003\u0001\u0000\u000e\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0002\u0003\u0001\u0000\b\u0003\u0006\u0000\u0004\u0003\u0004\u0000\u000e\u0003\u0002\u0000\u0001\u0003\u0001\u0000\f\u0003\u0001\u0000\u0002\u0003\u0003\u0000\u0001\u0003\u0002\u0000\u0004\u0003\u0001\u0000\u0002\u0003\n\u0000\b\u0003\u0006\u0000\u0006\u0003\u0001\u0000\u0003\u0003\u0001\u0000\n\u0003\u0003\u0000\u0001\u0003\n\u0000\u0004\u0003\u000b\u0000\n\u0004\u0001\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0007\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u000f\u0003\u0001\u0000\u0002\u0003\f\u0000\u0003\u0003\u0007\u0000\u0004\u0003\t\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0010\u0000\u0004\u0003\b\u0000\u0001\u0003\u000b\u0000\b\u0003\u0005\u0000\u0003\u0003\u0002\u0000\u0001\u0003\u0002\u0000\u0002\u0003\u0002\u0000\u0004\u0003\u0001\u0000\f\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0007\u0003\u0001\u0000\u0011\u0003\u0001\u0000\u0004\u0003\u0002\u0000\b\u0003\u0001\u0000\u0007\u0003\u0001\u0000\f\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0005\u0003\u0001\u0000\u0001\u0003\u0003\u0000\f\u0003\u0002\u0000\u000b\u0003\u0001\u0000\b\u0003\u0002\u0000\u0012\u0004\u0001\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0001\u0000\n\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0006\u0000\u0001\u0003\u0004\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0003\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0001\u0003\u0001\u0000\u0002\u0003\u0001\u0000\u0001\u0003\u0002\u0000\u0004\u0003\u0001\u0000\u0007\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0004\u0003\u0001\u0000\u0001\u0003\u0001\u0000\n\u0003\u0001\u0000\u0005\u0003\u0001\u0000\u0003\u0003\u0001\u0000\u0005\u0003\u0001\u0000\u0005\u0003");
    private static final int[] ZZ_ACTION = zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 = "\u0002\u0000\u0002\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0002\u0005\u0001\u0002\u0001\u0006\u0001\u0007\u0004\u0002\u0001\b\u0001\u0002\u0001\t\u0001\n\u0001\u000b\u0001\f\u0001\u0002\u0001\r\u0001\u000e\u0001\u000f\u0001\u0010\t\u0004\u0001\u0011\u0001\u0012\u0002\u0000\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0013\u0001\u0000\u0001\u0014\u0001\u0015\u0001\u0000\u0001\b\u0001\u0016\u0001\u0017\u0001\u0018\n\u0004\u0001\u0011\u0001\u0012\u0001\u0005\u0003\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0013\u0004\u0000\u0001\u0014\u0001\u0015\u0001\u0004\u0001\u0019\u0001\u0004\u0001\u001a\u0006\u0004\u0002\u0000\u0001\u0005\u0005\u0000\u0001\u0014\u0001\u0000\u0001\u0004\u0001\u001b\u0003\u0004\u0001\u001c\u0001\u0004\u0001\u001d\u0003\u0000\u0001\u001e\u0001\u0004\u0001\u001f\u0001\u0004\u0001 \u0001\u0000\u0001!\u0002\u0004\u0001\"";
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 = "\u0000\u0000\u00009\u0000r\u0000«\u0000ä\u0000ĝ\u0000Ŗ\u0000Ə\u0000ǈ\u0000ȁ\u0000Ⱥ\u0000ɳ\u0000ʬ\u0000˥\u0000̞\u0000͗\u0000ΐ\u0000ω\u0000ä\u0000ä\u0000ä\u0000ä\u0000Ђ\u0000ä\u0000ä\u0000ä\u0000ä\u0000л\u0000Ѵ\u0000ҭ\u0000Ӧ\u0000ԟ\u0000\u0558\u0000֑\u0000\u05ca\u0000\u0603\u0000ؼ\u0000ٵ\u0000ڮ\u0000ۧ\u0000ܠ\u0000ä\u0000ݙ\u0000ޒ\u0000ߋ\u0000ä\u0000ࠄ\u0000࠽\u0000ࡶ\u0000ࢯ\u0000ࣨ\u0000ω\u0000ä\u0000ä\u0000ä\u0000Ŗ\u0000ड\u0000ग़\u0000ও\u0000ৌ\u0000ਅ\u0000ਾ\u0000\u0a77\u0000ર\u0000૩\u0000ଢ\u0000\u0b5b\u0000ä\u0000ஔ\u0000்\u0000ఆ\u0000ి\u0000ݙ\u0000౸\u0000ಱ\u0000ä\u0000೪\u0000ണ\u0000൜\u0000ඕ\u0000\u0dce\u0000ä\u0000ง\u0000Ŗ\u0000เ\u0000Ŗ\u0000\u0e79\u0000າ\u0000\u0eeb\u0000༤\u0000ཝ\u0000ྖ\u0000࿏\u0000ဈ\u0000၁\u0000ၺ\u0000Ⴓ\u0000წ\u0000ᄥ\u0000ᅞ\u0000ä\u0000\u0dce\u0000ᆗ\u0000Ŗ\u0000ᇐ\u0000ሉ\u0000ቂ\u0000Ŗ\u0000ቻ\u0000Ŗ\u0000ኴ\u0000ይ\u0000ጦ\u0000Ŗ\u0000፟\u0000Ŗ\u0000᎘\u0000Ŗ\u0000Ꮡ\u0000Ŗ\u0000ᐊ\u0000ᑃ\u0000Ŗ";
    private static final int[] ZZ_TRANS = zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 = "\u0018\u0003\u0001\u0004 \u0003\u0001\u0005\u0002\u0006\u0001\u0007\u0001\b\u0001\u0007\u0002\b\u0001\t\u0003\u0007\u0001\n\u0001\u000b\u0001\f\u0002\u0007\u0001\u0005\u0001\u0007\u0001\b\u0001\r\u0001\u0007\u0001\u000e\u0001\u0005\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0017\u0001\u0018\u0001\u0019\u0001\u001a\u0001\u001b\u0001\u001c\u0001\u001d\u0001\u001e\u0001\u001f\u0001 \u0002\u0007\u0001!\u0003\u0007\u0001\"\u0002\u0007\u0001#\u0001\u0007\u0001$\u0001\u0007\u0001%\u0001\u0000\u0018\u0003\u0001\u0000 \u0003\u0018\u0000\u0001&Z\u0000\u0002\u00069\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0006\u0000\u0001\b\u0001\u0000\u0003\b\u0002\u0000\u0001'\u0001(\u0001)\u0005\u0000\u0001\b\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0015\u0000\u0001\b\u0001\u0000\u0003\b\u0002+\u0001'\u0001(\u0001)\u0005\u0000\u0001\b\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0015\u0000\u0001,\u0001\u0000\u0003,\u0004\u0000\u0001-\u0005\u0000\u0001,)\u0000\u0001)\u0001\u0000\u0003)\n\u0000\u0001)%\u0000\u0001\f\u0001\u0000\f\f\u0001.\u0002\f\u0001/'\f\u00110\u00011'0\u0017\u0000\u000129\u0000\u00013$\u0000\u0001,\u0001\u0000\u0003,\u0004\u0000\u0001-\u0005\u0000\u0001,\u0007\u0000\u00014\u001d\u0000\u001a\u0011\u00015\u001e\u0011\u001b\u0000\u00016;\u0000\u00017\u001d\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001\u0007\u00018\u0010\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u00019\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001:\u0001\u0007\u0001;\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001<\u0011\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001=\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001>\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001?\u000b\u0007\u0001@\u0003\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u0001A\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001B\u0011\u0007\u0005\u0000\u0001C\u0001\u0000\u0001C\u0003\u0000\u0003C\u0003\u0000\u0002C\u0001\u0000\u0001C\u0002\u0000\u0001C\u000f\u0000\u0012C\u001b\u0000\u0001D#\u0000\u0001E\u0001\u0000\u0003E\u0003\u0000\u0001F\u0006\u0000\u0001E\u0005\u0000\u0001F#\u0000\u0001G\u0001\u0000\u0003G\u0004\u0000\u0001H\u0005\u0000\u0001G)\u0000\u0001)\u0001\u0000\u0003)\u0002\u0000\u0001'\u0001(\u0006\u0000\u0001)\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0016\u0000\u0004I\u0002\u0000\u0001I\u0004\u0000\u0001I\u0002\u0000\u0001I\u0012\u0000\u0002I\u0001\u0000\u0001I\u0002\u0000\u0001I\u0001\u0000\u0001I\u000e\u0000\u0001,\u0001\u0000\u0003,\u0002\u0000\u0001J\u0001\u0000\u0001K\u0005\u0000\u0001,\u0011\u0000\u0001*\u0001\u0000\u0001J\u0015\u0000\u0001K\u0001\u0000\u0003K\n\u0000\u0001K,\u0000\u0003\f\u0004\u0000\u0006\f\u0001\u0000\u0001\f\u0010\u0000\u0001\f\u0001\u0000\u0001\f\u0003\u0000\u0001\f\u0003\u0000\u0001\f\u0002\u0000\u0001\f\u0019\u0000\u0001L+\u0000\u0002M\u0001N\u0005\u0000\u00030\u0001O\u0001\u0000\u00010\u0001P\u0010\u0000\u00010\u0001\u0000\u00010\u0003\u0000\u00010\u0003\u0000\u00010\u0002\u0000\u00010\u0005\u0000\u00172\u0001Q!2\u0019\u0000\u0001R\"\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001S\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0004\u0007\u0001T\r\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0006\u0007\u0001U\u000b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001V\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001\u0007\u0001W\u0010\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\b\u0007\u0001X\t\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\f\u0007\u0001Y\u0005\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001Z\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001[\u000e\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000b\u0007\u0001\\\u0006\u0007\u0005\u0000\tC\u0003\u0000\u0002C\u0001\u0000\u0002C\u0001\u0000\u0001C\u000f\u0000\u0012C\u0006\u0000\u0001E\u0001\u0000\u0003E\u0003\u0000\u0001(\u0006\u0000\u0001E\u0005\u0000\u0001(\u000b\u0000\u0001*\u0017\u0000\u0001E\u0001\u0000\u0003E\n\u0000\u0001E)\u0000\u0001G\u0001\u0000\u0003G\u0002\u0000\u0001]\u0001\u0000\u0001^\u0005\u0000\u0001G\u0011\u0000\u0001*\u0001\u0000\u0001]\u0015\u0000\u0001^\u0001\u0000\u0003^\n\u0000\u0001^)\u0000\u0001_\u0001\u0000\u0003_\u0003\u0000\u0001`\u0006\u0000\u0001_\u0005\u0000\u0001`#\u0000\u0001K\u0001\u0000\u0003K\u0002\u0000\u0001J\u0007\u0000\u0001K\u0011\u0000\u0001*\u0001\u0000\u0001J\u0018\u0000\u0002a5\u0000\u0004b\u0002\u0000\u0001b\u0004\u0000\u0001b\u0002\u0000\u0001b\u0012\u0000\u0002b\u0001\u0000\u0001b\u0002\u0000\u0001b\u0001\u0000\u0001b\u000f\u0000\u0004c\u0002\u0000\u0001c\u0004\u0000\u0001c\u0002\u0000\u0001c\u0012\u0000\u0002c\u0001\u0000\u0001c\u0002\u0000\u0001c\u0001\u0000\u0001c\u000f\u0000\u0004d\u0002\u0000\u0001d\u0004\u0000\u0001d\u0002\u0000\u0001d\u0012\u0000\u0002d\u0001\u0000\u0001d\u0002\u0000\u0001d\u0001\u0000\u0001d\n\u0000\u00162\u0001e\u0001f!2\u0003\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0006\u0007\u0001g\u000b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001h\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001i\u0011\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\t\u0007\u0001j\b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\r\u0007\u0001k\u0004\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001l\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000f\u0007\u0001m\u0002\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0011\u0007\u0001n\u0006\u0000\u0001o\u0001\u0000\u0003o\u0003\u0000\u0001p\u0006\u0000\u0001o\u0005\u0000\u0001p#\u0000\u0001^\u0001\u0000\u0003^\u0002\u0000\u0001]\u0007\u0000\u0001^\u0011\u0000\u0001*\u0001\u0000\u0001]\u0015\u0000\u0001_\u0001\u0000\u0003_\n\u0000\u0001_\u0011\u0000\u0001*\u0017\u0000\u0001_\u0001\u0000\u0003_\n\u0000\u0001_,\u0000\u000205\u0000\u00040\u0002\u0000\u00010\u0004\u0000\u00010\u0002\u0000\u00010\u0012\u0000\u00020\u0001\u0000\u00010\u0002\u0000\u00010\u0001\u0000\u00010\u000f\u0000\u0004q\u0002\u0000\u0001q\u0004\u0000\u0001q\u0002\u0000\u0001q\u0012\u0000\u0002q\u0001\u0000\u0001q\u0002\u0000\u0001q\u0001\u0000\u0001q\u000f\u0000\u0004N\u0002\u0000\u0001N\u0004\u0000\u0001N\u0002\u0000\u0001N\u0012\u0000\u0002N\u0001\u0000\u0001N\u0002\u0000\u0001N\u0001\u0000\u0001N\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001r\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001s\u000e\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\n\u0007\u0001t\u0007\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001u\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001v\u000f\u0007\u0006\u0000\u0001o\u0001\u0000\u0003o\n\u0000\u0001o\u0011\u0000\u0001*\u0017\u0000\u0001o\u0001\u0000\u0003o\n\u0000\u0001o*\u0000\u0004w\u0002\u0000\u0001w\u0004\u0000\u0001w\u0002\u0000\u0001w\u0012\u0000\u0002w\u0001\u0000\u0001w\u0002\u0000\u0001w\u0001\u0000\u0001w\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001x\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u0001y\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0007\u0000\u0004P\u0002\u0000\u0001P\u0004\u0000\u0001P\u0002\u0000\u0001P\u0012\u0000\u0002P\u0001\u0000\u0001P\u0002\u0000\u0001P\u0001\u0000\u0001P\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000b\u0007\u0001z\u0006\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001{\u000f\u0007\u0002\u0000";
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final String[] ZZ_ERROR_MSG = new String[]{"Unknown internal scanner error", "Error: could not match input", "Error: pushback value was too large"};
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\u0002\u0000\u0002\u0001\u0001\t\r\u0001\u0004\t\u0001\u0001\u0004\t\u000b\u0001\u0002\u0000\u0001\u0001\u0001\t\u0001\u0000\u0001\u0001\u0001\u0000\u0001\t\u0001\u0000\u0001\u0001\u0001\u0000\u0002\u0001\u0001\u0000\u0003\t\f\u0001\u0001\t\u0001\u0001\u0003\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\t\u0004\u0000\u0001\u0001\u0001\t\n\u0001\u0002\u0000\u0001\u0001\u0005\u0000\u0001\t\u0001\u0000\b\u0001\u0003\u0000\u0005\u0001\u0001\u0000\u0004\u0001";
    private Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private CharSequence zzBuffer;
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private boolean zzAtBOL;
    private boolean zzAtEOF;
    private boolean zzEOFDone;

    public static int ZZ_CMAP(int ch) {
        return ZZ_CMAP_A[ZZ_CMAP_Y[ZZ_CMAP_Z[ch >> 10] << 6 | ch >> 4 & 63] << 4 | ch & 15];
    }

    private static int[] zzUnpackAction() {
        int[] result = new int[123];
        int offset = 0;
        zzUnpackAction("\u0002\u0000\u0002\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0002\u0005\u0001\u0002\u0001\u0006\u0001\u0007\u0004\u0002\u0001\b\u0001\u0002\u0001\t\u0001\n\u0001\u000b\u0001\f\u0001\u0002\u0001\r\u0001\u000e\u0001\u000f\u0001\u0010\t\u0004\u0001\u0011\u0001\u0012\u0002\u0000\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0013\u0001\u0000\u0001\u0014\u0001\u0015\u0001\u0000\u0001\b\u0001\u0016\u0001\u0017\u0001\u0018\n\u0004\u0001\u0011\u0001\u0012\u0001\u0005\u0003\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0013\u0004\u0000\u0001\u0014\u0001\u0015\u0001\u0004\u0001\u0019\u0001\u0004\u0001\u001a\u0006\u0004\u0002\u0000\u0001\u0005\u0005\u0000\u0001\u0014\u0001\u0000\u0001\u0004\u0001\u001b\u0003\u0004\u0001\u001c\u0001\u0004\u0001\u001d\u0003\u0000\u0001\u001e\u0001\u0004\u0001\u001f\u0001\u0004\u0001 \u0001\u0000\u0001!\u0002\u0004\u0001\"", offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;

        int count;
        for(int l = packed.length(); i < l; --count) {
            count = packed.charAt(i++);
            int value = packed.charAt(i++);

            while(true) {
                result[j++] = value;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    private static int[] zzUnpackRowMap() {
        int[] result = new int[123];
        int offset = 0;
        zzUnpackRowMap("\u0000\u0000\u00009\u0000r\u0000«\u0000ä\u0000ĝ\u0000Ŗ\u0000Ə\u0000ǈ\u0000ȁ\u0000Ⱥ\u0000ɳ\u0000ʬ\u0000˥\u0000̞\u0000͗\u0000ΐ\u0000ω\u0000ä\u0000ä\u0000ä\u0000ä\u0000Ђ\u0000ä\u0000ä\u0000ä\u0000ä\u0000л\u0000Ѵ\u0000ҭ\u0000Ӧ\u0000ԟ\u0000\u0558\u0000֑\u0000\u05ca\u0000\u0603\u0000ؼ\u0000ٵ\u0000ڮ\u0000ۧ\u0000ܠ\u0000ä\u0000ݙ\u0000ޒ\u0000ߋ\u0000ä\u0000ࠄ\u0000࠽\u0000ࡶ\u0000ࢯ\u0000ࣨ\u0000ω\u0000ä\u0000ä\u0000ä\u0000Ŗ\u0000ड\u0000ग़\u0000ও\u0000ৌ\u0000ਅ\u0000ਾ\u0000\u0a77\u0000ર\u0000૩\u0000ଢ\u0000\u0b5b\u0000ä\u0000ஔ\u0000்\u0000ఆ\u0000ి\u0000ݙ\u0000౸\u0000ಱ\u0000ä\u0000೪\u0000ണ\u0000൜\u0000ඕ\u0000\u0dce\u0000ä\u0000ง\u0000Ŗ\u0000เ\u0000Ŗ\u0000\u0e79\u0000າ\u0000\u0eeb\u0000༤\u0000ཝ\u0000ྖ\u0000࿏\u0000ဈ\u0000၁\u0000ၺ\u0000Ⴓ\u0000წ\u0000ᄥ\u0000ᅞ\u0000ä\u0000\u0dce\u0000ᆗ\u0000Ŗ\u0000ᇐ\u0000ሉ\u0000ቂ\u0000Ŗ\u0000ቻ\u0000Ŗ\u0000ኴ\u0000ይ\u0000ጦ\u0000Ŗ\u0000፟\u0000Ŗ\u0000᎘\u0000Ŗ\u0000Ꮡ\u0000Ŗ\u0000ᐊ\u0000ᑃ\u0000Ŗ", offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;

        int high;
        for(int l = packed.length(); i < l; result[j++] = high | packed.charAt(i++)) {
            high = packed.charAt(i++) << 16;
        }

        return j;
    }

    private static int[] zzUnpackTrans() {
        int[] result = new int[5244];
        int offset = 0;
        zzUnpackTrans("\u0018\u0003\u0001\u0004 \u0003\u0001\u0005\u0002\u0006\u0001\u0007\u0001\b\u0001\u0007\u0002\b\u0001\t\u0003\u0007\u0001\n\u0001\u000b\u0001\f\u0002\u0007\u0001\u0005\u0001\u0007\u0001\b\u0001\r\u0001\u0007\u0001\u000e\u0001\u0005\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0017\u0001\u0018\u0001\u0019\u0001\u001a\u0001\u001b\u0001\u001c\u0001\u001d\u0001\u001e\u0001\u001f\u0001 \u0002\u0007\u0001!\u0003\u0007\u0001\"\u0002\u0007\u0001#\u0001\u0007\u0001$\u0001\u0007\u0001%\u0001\u0000\u0018\u0003\u0001\u0000 \u0003\u0018\u0000\u0001&Z\u0000\u0002\u00069\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0006\u0000\u0001\b\u0001\u0000\u0003\b\u0002\u0000\u0001'\u0001(\u0001)\u0005\u0000\u0001\b\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0015\u0000\u0001\b\u0001\u0000\u0003\b\u0002+\u0001'\u0001(\u0001)\u0005\u0000\u0001\b\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0015\u0000\u0001,\u0001\u0000\u0003,\u0004\u0000\u0001-\u0005\u0000\u0001,)\u0000\u0001)\u0001\u0000\u0003)\n\u0000\u0001)%\u0000\u0001\f\u0001\u0000\f\f\u0001.\u0002\f\u0001/'\f\u00110\u00011'0\u0017\u0000\u000129\u0000\u00013$\u0000\u0001,\u0001\u0000\u0003,\u0004\u0000\u0001-\u0005\u0000\u0001,\u0007\u0000\u00014\u001d\u0000\u001a\u0011\u00015\u001e\u0011\u001b\u0000\u00016;\u0000\u00017\u001d\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001\u0007\u00018\u0010\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u00019\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001:\u0001\u0007\u0001;\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001<\u0011\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001=\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001>\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001?\u000b\u0007\u0001@\u0003\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u0001A\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001B\u0011\u0007\u0005\u0000\u0001C\u0001\u0000\u0001C\u0003\u0000\u0003C\u0003\u0000\u0002C\u0001\u0000\u0001C\u0002\u0000\u0001C\u000f\u0000\u0012C\u001b\u0000\u0001D#\u0000\u0001E\u0001\u0000\u0003E\u0003\u0000\u0001F\u0006\u0000\u0001E\u0005\u0000\u0001F#\u0000\u0001G\u0001\u0000\u0003G\u0004\u0000\u0001H\u0005\u0000\u0001G)\u0000\u0001)\u0001\u0000\u0003)\u0002\u0000\u0001'\u0001(\u0006\u0000\u0001)\u0005\u0000\u0001(\u000b\u0000\u0001*\u0001\u0000\u0001'\u0016\u0000\u0004I\u0002\u0000\u0001I\u0004\u0000\u0001I\u0002\u0000\u0001I\u0012\u0000\u0002I\u0001\u0000\u0001I\u0002\u0000\u0001I\u0001\u0000\u0001I\u000e\u0000\u0001,\u0001\u0000\u0003,\u0002\u0000\u0001J\u0001\u0000\u0001K\u0005\u0000\u0001,\u0011\u0000\u0001*\u0001\u0000\u0001J\u0015\u0000\u0001K\u0001\u0000\u0003K\n\u0000\u0001K,\u0000\u0003\f\u0004\u0000\u0006\f\u0001\u0000\u0001\f\u0010\u0000\u0001\f\u0001\u0000\u0001\f\u0003\u0000\u0001\f\u0003\u0000\u0001\f\u0002\u0000\u0001\f\u0019\u0000\u0001L+\u0000\u0002M\u0001N\u0005\u0000\u00030\u0001O\u0001\u0000\u00010\u0001P\u0010\u0000\u00010\u0001\u0000\u00010\u0003\u0000\u00010\u0003\u0000\u00010\u0002\u0000\u00010\u0005\u0000\u00172\u0001Q!2\u0019\u0000\u0001R\"\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001S\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0004\u0007\u0001T\r\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0006\u0007\u0001U\u000b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001V\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001\u0007\u0001W\u0010\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\b\u0007\u0001X\t\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\f\u0007\u0001Y\u0005\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001Z\u000f\u0000\u0012\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001[\u000e\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000b\u0007\u0001\\\u0006\u0007\u0005\u0000\tC\u0003\u0000\u0002C\u0001\u0000\u0002C\u0001\u0000\u0001C\u000f\u0000\u0012C\u0006\u0000\u0001E\u0001\u0000\u0003E\u0003\u0000\u0001(\u0006\u0000\u0001E\u0005\u0000\u0001(\u000b\u0000\u0001*\u0017\u0000\u0001E\u0001\u0000\u0003E\n\u0000\u0001E)\u0000\u0001G\u0001\u0000\u0003G\u0002\u0000\u0001]\u0001\u0000\u0001^\u0005\u0000\u0001G\u0011\u0000\u0001*\u0001\u0000\u0001]\u0015\u0000\u0001^\u0001\u0000\u0003^\n\u0000\u0001^)\u0000\u0001_\u0001\u0000\u0003_\u0003\u0000\u0001`\u0006\u0000\u0001_\u0005\u0000\u0001`#\u0000\u0001K\u0001\u0000\u0003K\u0002\u0000\u0001J\u0007\u0000\u0001K\u0011\u0000\u0001*\u0001\u0000\u0001J\u0018\u0000\u0002a5\u0000\u0004b\u0002\u0000\u0001b\u0004\u0000\u0001b\u0002\u0000\u0001b\u0012\u0000\u0002b\u0001\u0000\u0001b\u0002\u0000\u0001b\u0001\u0000\u0001b\u000f\u0000\u0004c\u0002\u0000\u0001c\u0004\u0000\u0001c\u0002\u0000\u0001c\u0012\u0000\u0002c\u0001\u0000\u0001c\u0002\u0000\u0001c\u0001\u0000\u0001c\u000f\u0000\u0004d\u0002\u0000\u0001d\u0004\u0000\u0001d\u0002\u0000\u0001d\u0012\u0000\u0002d\u0001\u0000\u0001d\u0002\u0000\u0001d\u0001\u0000\u0001d\n\u0000\u00162\u0001e\u0001f!2\u0003\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0006\u0007\u0001g\u000b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001h\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0001i\u0011\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\t\u0007\u0001j\b\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\r\u0007\u0001k\u0004\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001l\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000f\u0007\u0001m\u0002\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0011\u0007\u0001n\u0006\u0000\u0001o\u0001\u0000\u0003o\u0003\u0000\u0001p\u0006\u0000\u0001o\u0005\u0000\u0001p#\u0000\u0001^\u0001\u0000\u0003^\u0002\u0000\u0001]\u0007\u0000\u0001^\u0011\u0000\u0001*\u0001\u0000\u0001]\u0015\u0000\u0001_\u0001\u0000\u0003_\n\u0000\u0001_\u0011\u0000\u0001*\u0017\u0000\u0001_\u0001\u0000\u0003_\n\u0000\u0001_,\u0000\u000205\u0000\u00040\u0002\u0000\u00010\u0004\u0000\u00010\u0002\u0000\u00010\u0012\u0000\u00020\u0001\u0000\u00010\u0002\u0000\u00010\u0001\u0000\u00010\u000f\u0000\u0004q\u0002\u0000\u0001q\u0004\u0000\u0001q\u0002\u0000\u0001q\u0012\u0000\u0002q\u0001\u0000\u0001q\u0002\u0000\u0001q\u0001\u0000\u0001q\u000f\u0000\u0004N\u0002\u0000\u0001N\u0004\u0000\u0001N\u0002\u0000\u0001N\u0012\u0000\u0002N\u0001\u0000\u0001N\u0002\u0000\u0001N\u0001\u0000\u0001N\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001r\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0003\u0007\u0001s\u000e\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\n\u0007\u0001t\u0007\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0005\u0007\u0001u\f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001v\u000f\u0007\u0006\u0000\u0001o\u0001\u0000\u0003o\n\u0000\u0001o\u0011\u0000\u0001*\u0017\u0000\u0001o\u0001\u0000\u0003o\n\u0000\u0001o*\u0000\u0004w\u0002\u0000\u0001w\u0004\u0000\u0001w\u0002\u0000\u0001w\u0012\u0000\u0002w\u0001\u0000\u0001w\u0002\u0000\u0001w\u0001\u0000\u0001w\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001x\u000f\u0007\u0005\u0000\t\u0007\u0003\u0000\u0001\u0007\u0001y\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0012\u0007\u0007\u0000\u0004P\u0002\u0000\u0001P\u0004\u0000\u0001P\u0002\u0000\u0001P\u0012\u0000\u0002P\u0001\u0000\u0001P\u0002\u0000\u0001P\u0001\u0000\u0001P\r\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u000b\u0007\u0001z\u0006\u0007\u0005\u0000\t\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u000f\u0000\u0002\u0007\u0001{\u000f\u0007\u0002\u0000", offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;

        int count;
        for(int l = packed.length(); i < l; --count) {
            count = packed.charAt(i++);
            int value = packed.charAt(i++);
            --value;

            while(true) {
                result[j++] = value;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    private static int[] zzUnpackAttribute() {
        int[] result = new int[123];
        int offset = 0;
        zzUnpackAttribute("\u0002\u0000\u0002\u0001\u0001\t\r\u0001\u0004\t\u0001\u0001\u0004\t\u000b\u0001\u0002\u0000\u0001\u0001\u0001\t\u0001\u0000\u0001\u0001\u0001\u0000\u0001\t\u0001\u0000\u0001\u0001\u0001\u0000\u0002\u0001\u0001\u0000\u0003\t\f\u0001\u0001\t\u0001\u0001\u0003\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\t\u0004\u0000\u0001\u0001\u0001\t\n\u0001\u0002\u0000\u0001\u0001\u0005\u0000\u0001\t\u0001\u0000\b\u0001\u0003\u0000\u0005\u0001\u0001\u0000\u0004\u0001", offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;

        int count;
        for(int l = packed.length(); i < l; --count) {
            count = packed.charAt(i++);
            int value = packed.charAt(i++);

            while(true) {
                result[j++] = value;
                if (count <= 0) {
                    break;
                }
            }
        }

        return j;
    }

    public _GnoLexer() {
        this((Reader)null);
    }

    public _GnoLexer(Reader in) {
        this.zzLexicalState = 0;
        this.zzBuffer = "";
        this.zzAtBOL = true;
        this.zzReader = in;
    }

    private static char[] zzUnpackCMap(String packed) {
        int size = 0;
        int k = 0;

        for(int length = packed.length(); k < length; k += 2) {
            size += packed.charAt(k);
        }

        char[] map = new char[size];
        int i = 0;

        int count;
        for(int j = 0; i < packed.length(); --count) {
            count = packed.charAt(i++);
            char value = packed.charAt(i++);

            while(true) {
                map[j++] = value;
                if (count == 0) {
                    break;
                }
            }
        }

        return map;
    }

    public final int getTokenStart() {
        return this.zzStartRead;
    }

    public final int getTokenEnd() {
        return this.getTokenStart() + this.yylength();
    }

    public void reset(CharSequence buffer, int start, int end, int initialState) {
        this.zzBuffer = buffer;
        this.zzCurrentPos = this.zzMarkedPos = this.zzStartRead = start;
        this.zzAtEOF = false;
        this.zzAtBOL = true;
        this.zzEndRead = end;
        this.yybegin(initialState);
    }

    private boolean zzRefill() throws IOException {
        return true;
    }

    public final int yystate() {
        return this.zzLexicalState;
    }

    public final void yybegin(int newState) {
        this.zzLexicalState = newState;
    }

    public final CharSequence yytext() {
        return this.zzBuffer.subSequence(this.zzStartRead, this.zzMarkedPos);
    }

    public final char yycharat(int pos) {
        return this.zzBuffer.charAt(this.zzStartRead + pos);
    }

    public final int yylength() {
        return this.zzMarkedPos - this.zzStartRead;
    }

    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException var4) {
            message = ZZ_ERROR_MSG[0];
        }

        throw new Error(message);
    }

    public void yypushback(int number) {
        if (number > this.yylength()) {
            this.zzScanError(2);
        }

        this.zzMarkedPos -= number;
    }

    public IElementType advance() throws IOException {
        int zzEndReadL = this.zzEndRead;
        CharSequence zzBufferL = this.zzBuffer;
        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while(true) {
            int zzMarkedPosL = this.zzMarkedPos;
            int zzAction = -1;
            int zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
            this.zzState = ZZ_LEXSTATE[this.zzLexicalState];
            int zzAttributes = zzAttrL[this.zzState];
            if ((zzAttributes & 1) == 1) {
                zzAction = this.zzState;
            }

            int zzInput;
            while(true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                } else {
                    if (this.zzAtEOF) {
                        zzInput = -1;
                        break;
                    }

                    this.zzCurrentPos = zzCurrentPosL;
                    this.zzMarkedPos = zzMarkedPosL;
                    boolean eof = this.zzRefill();
                    zzCurrentPosL = this.zzCurrentPos;
                    zzMarkedPosL = this.zzMarkedPos;
                    zzBufferL = this.zzBuffer;
                    zzEndReadL = this.zzEndRead;
                    if (eof) {
                        zzInput = -1;
                        break;
                    }

                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                }

                int zzNext = zzTransL[zzRowMapL[this.zzState] + ZZ_CMAP(zzInput)];
                if (zzNext == -1) {
                    break;
                }

                this.zzState = zzNext;
                zzAttributes = zzAttrL[this.zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = this.zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8) {
                        break;
                    }
                }
            }

            this.zzMarkedPos = zzMarkedPosL;
            if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
                this.zzAtEOF = true;
                return null;
            }

            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    return GnoTypes.TEXT;
                case 2:
                    this.yybegin(0);
                    this.yypushback(this.yytext().length());
                    break;
                case 3:
                    return TokenType.WHITE_SPACE;
                case 4:
                    return GnoTypes.IDENTIFIER;
                case 5:
                    return GnoTypes.NUMBER;
                case 6:
                    return GnoTypes.DOT;
                case 7:
                    return GnoTypes.STRING;
                case 8:
                    return GnoTypes.RAW_STRING;
                case 9:
                    return GnoTypes.LPAREN;
                case 10:
                    return GnoTypes.RPAREN;
                case 11:
                    return GnoTypes.ASSIGN;
                case 12:
                    return GnoTypes.BIT_OR;
                case 13:
                    return GnoTypes.COMMA;
                case 14:
                    return GnoTypes.AT;
                case 15:
                    return GnoTypes.PERCENT;
                case 16:
                    return GnoTypes.HASH;
                case 17:
                    return GnoTypes.VARIABLE;
                case 18:
                    this.yybegin(2);
                    return GnoTypes.LDOUBLE_BRACE;
                case 19:
                    return GnoTypes.CHAR;
                case 20:
                    return GnoTokenSets.COMMENT;
                case 21:
                    return GnoTypes.LDOUBLE_BRACE;
                case 22:
                    this.yybegin(0);
                    return GnoTypes.RDOUBLE_BRACE;
                case 23:
                    return GnoTypes.VAR_ASSIGN;
                case 24:
                    return GnoTypes.IF;
                case 25:
                    return GnoTypes.END;
                case 26:
                    return GnoTypes.NIL;
                case 27:
                    return GnoTypes.ELSE;
                case 28:
                    return GnoTypes.TRUE;
                case 29:
                    return GnoTypes.WITH;
                case 30:
                    return GnoTypes.FALSE;
                case 31:
                    return GnoTypes.BLOCK;
                case 32:
                    return GnoTypes.RANGE;
                case 33:
                    return GnoTypes.DEFINE;
                case 34:
                    return GnoTypes.TEMPLATE;
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                    break;
                default:
                    this.zzScanError(1);
            }
        }
    }
}
